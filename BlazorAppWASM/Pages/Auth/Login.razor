@page "/auth/login"
@using BlazorAppWASM.Services
@using BlazorAppWASM.Models.Requests
@using BlazorAppWASM.Services.Interfaces

@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject StateService StateService

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h2>Connexion</h2>
            <p>Bienvenue dans votre biblioth√®que personnelle</p>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">
                @errorMessage
            </div>
        }

        <EditForm Model="@loginRequest" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="loginRequest.Email" />
                <ValidationMessage For="@(() => loginRequest.Email)" />
            </div>

            <div class="form-group">
                <label for="password">Mot de passe</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginRequest.Password" />
                <ValidationMessage For="@(() => loginRequest.Password)" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary btn-block">Se connecter</button>
            </div>

            <div class="auth-footer">
                <p>Pas encore de compte ? <a href="/auth/register">S'inscrire</a></p>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var result = await AuthService.Connexion(loginRequest.Email, loginRequest.Password);
            if (result)
            {
                StateService.SetUserConnected(true);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Email ou mot de passe incorrect.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Une erreur s'est produite lors de la connexion.";
        }
    }
}
