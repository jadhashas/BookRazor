@page "/auth/login"
@using BlazorAppWASM.Services
@using BlazorAppWASM.Models
@using BlazorAppWASM.Services.Interfaces

@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject StateService StateService

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h2>Connexion</h2>
            <p>Bienvenue dans votre bibliothèque personnelle</p>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">
                @errorMessage
            </div>
        }

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="form-group">
                <label for="password">Mot de passe</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.MotDePasse" />
                <ValidationMessage For="@(() => loginModel.MotDePasse)" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary btn-block">Se connecter</button>
            </div>

            <div class="auth-footer">
                <p>Pas encore de compte ? <a href="/auth/register">S'inscrire</a></p>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        var result = await AuthService.Connexion(loginModel.Email, loginModel.MotDePasse);
        if (result)
        {
            StateService.SetUserConnected(true);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Connexion échouée, veuillez vérifier vos informations.";
        }
    }
}
